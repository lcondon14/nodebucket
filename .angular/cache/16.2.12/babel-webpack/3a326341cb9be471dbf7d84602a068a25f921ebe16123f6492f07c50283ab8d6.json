{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let TasksComponent = class TasksComponent {\n  constructor(cookieService, taskService, fb) {\n    this.cookieService = cookieService;\n    this.taskService = taskService;\n    this.fb = fb;\n    this.newTaskForm = this.fb.group({\n      text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])]\n    });\n    this.employee = {};\n    this.todo = [];\n    this.done = [];\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.empId = parseInt(this.cookieService.get('session_user'), 10);\n    this.taskService.getTasks(this.empId).subscribe({\n      next: res => {\n        console.log('Employee', res);\n        this.employee = res;\n      },\n      error: err => {\n        console.error('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert();\n      },\n      complete: () => {\n        this.employee.todo ? this.todo = this.employee.todo : this.todo = [];\n        this.employee.done ? this.done = this.employee.done : this.done = [];\n        console.log('todo', this.todo);\n        console.log('done', this.done);\n      }\n    });\n  }\n  addTask() {\n    const text = this.newTaskForm.controls['text'].value;\n    this.taskService.addTask(this.empId, text).subscribe({\n      next: task => {\n        console.log('Task added with id', task.id);\n        const newTask = {\n          _id: task.id,\n          text: text\n        };\n        this.todo.push(newTask);\n        this.newTaskForm.reset();\n        this.successMessage = 'Task added succesfully';\n        this.hideAlert();\n      },\n      error: err => {\n        console.log('error, err');\n        this.errorMessage = err.message;\n        this.hideAlert();\n      }\n    });\n  }\n  hideAlert() {\n    setTimeout(() => {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }, 5000);\n  }\n};\nTasksComponent = __decorate([Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})], TasksComponent);","map":{"version":3,"names":["Component","Validators","TasksComponent","constructor","cookieService","taskService","fb","newTaskForm","group","text","compose","required","minLength","maxLength","employee","todo","done","errorMessage","successMessage","empId","parseInt","get","getTasks","subscribe","next","res","console","log","error","err","message","hideAlert","complete","addTask","controls","value","task","id","newTask","_id","push","reset","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/laurelcondon/Desktop/buwebdev/nodebucket/src/app/tasks/tasks.component.ts"],"sourcesContent":["import { Employee } from './../shared/employee.interface';\nimport { Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Item } from '../shared/item.interface';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TaskService } from '../shared/task.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {\nemployee: Employee;\nempId: number;\ntodo: Item[];\ndone: Item[];\nerrorMessage: string;\nsuccessMessage: string;\n\nnewTaskForm: FormGroup = this.fb.group({\n  text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])]\n\n});\nconstructor(private cookieService: CookieService, private taskService: TaskService, private fb: FormBuilder){\n  this.employee = {} as Employee;\n  this.todo = [];\n  this.done = [];\n  this.errorMessage = '';\n  this.successMessage = '';\n\n    this.empId = parseInt(this.cookieService.get('session_user'), 10);\n\n\n    this.taskService.getTasks(this.empId).subscribe({\n      next: (res: any ) => {\n        console.log('Employee', res);\n        this.employee = res;\n      },\n      error: (err) => {\n        console.error('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert();\n      },\n      complete: () => {\n        this.employee.todo ? this.todo = this.employee.todo : this.todo = [];\n        this.employee.done ? this.done = this.employee.done : this.done = [];\n        \n        console.log('todo', this.todo);\n        console.log('done', this.done);\n}\n    \n})\n}\n\naddTask() {\n  const text = this.newTaskForm.controls['text'].value;\n\n  this.taskService.addTask(this.empId, text).subscribe({\n    next: (task: any) => {\n       console.log('Task added with id', task.id);\n    const newTask = {\n      _id: task.id,\n      text: text\n    }\n\n    this.todo.push(newTask);\n    this.newTaskForm.reset();\n\n\n    this.successMessage = 'Task added succesfully';\n\n    this.hideAlert();\n  },\n\n  error: (err) => {\n  console.log('error, err');\n  this.errorMessage = err.message;\n  this.hideAlert();\n}\n  });\n\n\n}\n\nhideAlert() {\n  setTimeout(() => {\n  this.errorMessage = '';\n  this.successMessage = '';\n}, 5000)\n}\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAY3BC,YAAoBC,aAA4B,EAAUC,WAAwB,EAAUC,EAAe;IAAvF,KAAAF,aAAa,GAAbA,aAAa;IAAyB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,EAAE,GAAFA,EAAE;IAJ9F,KAAAC,WAAW,GAAc,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACrCC,IAAI,EAAE,CAAC,IAAI,EAAER,UAAU,CAACS,OAAO,CAAC,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;KAE1G,CAAC;IAEA,IAAI,CAACC,QAAQ,GAAG,EAAc;IAC9B,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,cAAc,GAAG,EAAE;IAEtB,IAAI,CAACC,KAAK,GAAGC,QAAQ,CAAC,IAAI,CAAChB,aAAa,CAACiB,GAAG,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC;IAGjE,IAAI,CAAChB,WAAW,CAACiB,QAAQ,CAAC,IAAI,CAACH,KAAK,CAAC,CAACI,SAAS,CAAC;MAC9CC,IAAI,EAAGC,GAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;QAC5B,IAAI,CAACX,QAAQ,GAAGW,GAAG;MACrB,CAAC;MACDG,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACE,KAAK,CAAC,OAAO,EAAEC,GAAG,CAAC;QAC3B,IAAI,CAACZ,YAAY,GAAGY,GAAG,CAACC,OAAO;QAC/B,IAAI,CAACC,SAAS,EAAE;MAClB,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAK;QACb,IAAI,CAAClB,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACD,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,EAAE;QACpE,IAAI,CAACD,QAAQ,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACF,QAAQ,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,EAAE;QAEpEU,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACZ,IAAI,CAAC;QAC9BW,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACX,IAAI,CAAC;MACtC;KAEC,CAAC;EACF;EAEAiB,OAAOA,CAAA;IACL,MAAMxB,IAAI,GAAG,IAAI,CAACF,WAAW,CAAC2B,QAAQ,CAAC,MAAM,CAAC,CAACC,KAAK;IAEpD,IAAI,CAAC9B,WAAW,CAAC4B,OAAO,CAAC,IAAI,CAACd,KAAK,EAAEV,IAAI,CAAC,CAACc,SAAS,CAAC;MACnDC,IAAI,EAAGY,IAAS,IAAI;QACjBV,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAES,IAAI,CAACC,EAAE,CAAC;QAC7C,MAAMC,OAAO,GAAG;UACdC,GAAG,EAAEH,IAAI,CAACC,EAAE;UACZ5B,IAAI,EAAEA;SACP;QAED,IAAI,CAACM,IAAI,CAACyB,IAAI,CAACF,OAAO,CAAC;QACvB,IAAI,CAAC/B,WAAW,CAACkC,KAAK,EAAE;QAGxB,IAAI,CAACvB,cAAc,GAAG,wBAAwB;QAE9C,IAAI,CAACa,SAAS,EAAE;MAClB,CAAC;MAEDH,KAAK,EAAGC,GAAG,IAAI;QACfH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAACV,YAAY,GAAGY,GAAG,CAACC,OAAO;QAC/B,IAAI,CAACC,SAAS,EAAE;MAClB;KACG,CAAC;EAGJ;EAEAA,SAASA,CAAA;IACPW,UAAU,CAAC,MAAK;MAChB,IAAI,CAACzB,YAAY,GAAG,EAAE;MACtB,IAAI,CAACC,cAAc,GAAG,EAAE;IAC1B,CAAC,EAAE,IAAI,CAAC;EACR;CACC;AA/EYhB,cAAc,GAAAyC,UAAA,EAL1B3C,SAAS,CAAC;EACT4C,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW5C,cAAc,CA+E1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}