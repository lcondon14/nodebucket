{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"../shared/task.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction TasksComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction TasksComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.successMessage, \" \");\n  }\n}\nfunction TasksComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17)(2, \"strong\");\n    i0.ɵɵtext(3, \"Please enter a task!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"button\", 18);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17)(2, \"strong\");\n    i0.ɵɵtext(3, \"The tasks field must be at least 3 characters long\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"button\", 18);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17)(2, \"strong\");\n    i0.ɵɵtext(3, \"The field cannot be more than 50 characters long\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"button\", 18);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19);\n    i0.ɵɵtext(2, \" no tasks to do yet! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_26_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19);\n    i0.ɵɵtext(2, \" No Tasks to do yet! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_26_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22)(3, \"div\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 22)(6, \"div\", 25)(7, \"button\", 26)(8, \"span\", 27);\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", item_r10.text, \" \");\n  }\n}\nfunction TasksComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22)(3, \"div\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 24)(6, \"div\", 25)(7, \"button\", 26)(8, \"span\", 27);\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(10, \"div\", 28)(11, \"h4\", 1);\n    i0.ɵɵtext(12, \"Done\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 29);\n    i0.ɵɵelement(14, \"div\", 13);\n    i0.ɵɵtemplate(15, TasksComponent_div_26_div_15_Template, 3, 0, \"div\", 4);\n    i0.ɵɵtemplate(16, TasksComponent_div_26_div_16_Template, 10, 1, \"div\", 14);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.text, \" \");\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.done.length == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.done);\n  }\n}\nexport let TasksComponent = /*#__PURE__*/(() => {\n  class TasksComponent {\n    constructor(cookieService, taskService, fb) {\n      this.cookieService = cookieService;\n      this.taskService = taskService;\n      this.fb = fb;\n      this.newTaskForm = this.fb.group({\n        text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])]\n      });\n      this.employee = {};\n      this.todo = [];\n      this.done = [];\n      this.errorMessage = '';\n      this.successMessage = '';\n      this.empId = parseInt(this.cookieService.get('session_user'), 10);\n      this.taskService.getTasks(this.empId).subscribe({\n        next: res => {\n          console.log('Employee', res);\n          this.employee = res;\n        },\n        error: err => {\n          console.error('error', err);\n          this.errorMessage = err.message;\n          this.hideAlert();\n        },\n        complete: () => {\n          this.employee.todo ? this.todo = this.employee.todo : this.todo = [];\n          this.employee.done ? this.done = this.employee.done : this.done = [];\n          console.log('todo', this.todo);\n          console.log('done', this.done);\n        }\n      });\n    }\n    addTask() {\n      const text = this.newTaskForm.controls['text'].value;\n      this.taskService.addTask(this.empId, text).subscribe({\n        next: task => {\n          console.log('Task added with id', task.id);\n          const newTask = {\n            _id: task.id,\n            text: text\n          };\n          this.todo.push(newTask);\n          this.newTaskForm.reset();\n          this.successMessage = 'Task added successfully';\n          this.hideAlert();\n        },\n        error: err => {\n          console.log('error, err');\n          this.errorMessage = err.message;\n          this.hideAlert();\n        }\n      });\n    }\n    hideAlert() {\n      setTimeout(() => {\n        this.errorMessage = '';\n        this.successMessage = '';\n      }, 5000);\n    }\n    static #_ = this.ɵfac = function TasksComponent_Factory(t) {\n      return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.CookieService), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TasksComponent,\n      selectors: [[\"app-tasks\"]],\n      decls: 27,\n      vars: 9,\n      consts: [[1, \"container-fluid\", \"pt-2\", 2, \"min-height\", \"600px\"], [1, \"text-center\"], [1, \"row\", \"justify-content-center\", \"pt-4\"], [1, \"col-sm-10\", \"col-md-8\", \"col-lg-6\"], [4, \"ngIf\"], [1, \"col-sm-10\", \"co-md-8\", \"col-lg-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"text\", \"placeholder\", \"Add new Tasks\", 1, \"form-control\"], [\"type\", \"submit\", \"id\", \"btnAdd\", 1, \"btn\", \"btn-outline-secondary\", 3, \"disabled\"], [1, \"row\", \"gy-2\", \"justify-center-center\"], [1, \"col-sm-5\", \"col=md-5\", \"col-lg-8\"], [1, \"p=3\", \"border\", \"bg-light\"], [1, \"container\"], [\"class\", \"mt-2\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 1, \"'alert\", \"alert-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"arial-label\", \"Close\", 1, \"btn-close\"], [1, \"alert\", \"alert-info\"], [1, \"mt-2\"], [1, \"row\", \"border\", \"bg-white\"], [1, \"col-sm-6\"], [1, \"card-body\"], [1, \"col-cm-6\"], [1, \"card-body\", \"float-end\"], [1, \"btn\"], [1, \"material-icons\"], [1, \"col-sm-5\", \"col-md-5\", \"col-lg-3\"], [1, \"p-3\", \"border\", \"bg-light\"]],\n      template: function TasksComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"tasks works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"h1\", 1);\n          i0.ɵɵtext(4, \"My Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3);\n          i0.ɵɵtemplate(7, TasksComponent_div_7_Template, 3, 1, \"div\", 4);\n          i0.ɵɵtemplate(8, TasksComponent_div_8_Template, 3, 1, \"div\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 5)(11, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function TasksComponent_Template_form_ngSubmit_11_listener() {\n            return ctx.addTask();\n          });\n          i0.ɵɵelementStart(12, \"div\", 7);\n          i0.ɵɵelement(13, \"input\", 8);\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵtext(15, \"Add\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(16, TasksComponent_div_16_Template, 5, 0, \"div\", 4);\n          i0.ɵɵtemplate(17, TasksComponent_div_17_Template, 5, 0, \"div\", 4);\n          i0.ɵɵtemplate(18, TasksComponent_div_18_Template, 5, 0, \"div\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(19, \"div\", 10)(20, \"div\", 11)(21, \"h4\", 1);\n          i0.ɵɵtext(22, \"ToDo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 12)(24, \"div\", 13);\n          i0.ɵɵtemplate(25, TasksComponent_div_25_Template, 3, 0, \"div\", 4);\n          i0.ɵɵtemplate(26, TasksComponent_div_26_Template, 17, 3, \"div\", 14);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.newTaskForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.newTaskForm.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.newTaskForm.controls[\"text\"].touched && ctx.newTaskForm.controls[\"text\"].hasError(\"required\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.newTaskForm.controls[\"text\"].touched && ctx.newTaskForm.controls[\"text\"].hasError(\"minlength\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.newTaskForm.controls[\"text\"].touched && ctx.newTaskForm.controls[\"text\"].hasError(\"maxlength\"));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.todo.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.todo);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n    });\n  }\n  return TasksComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}